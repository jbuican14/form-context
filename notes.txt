Install dependencies
- npm i --save @material-ui/core @material-ui/icons --legacy-peer-deps (for v.18)

Create a navbar under src/components/Navbar.js and import this in our src/App.js

Working in Navbar
- Add <Appbar> to have 'Toolbar' which will have 
  1.) Icon, 2.) Typography (className, variant and color) 3.) Switch (for toggle)

- Create styles/NavBarStyles.js for setting up our style that material UI will wrap 
, generate the output (we also introduce a way to improve the responsive via 
[theme.breakpoints.up('sm'), for example])
https://github.com/Colt/context-demo-app/blob/add-initial-components/src/Navbar.js

- Create Form component
Form has form tag with <FormControl>tag and can be inline or block tag. 
<InputLabel/>, <FormControlLabel/>, <Button></Button>

- Create & init CONTEXT 
step1 : define a new context --> React.createContext(defaultValue)
step2 : know that every context obj comes with 'Provider context'
step3 : createContext you create and add Provider to create <whatever-context.Provider>
</whatever-context.Provider> (pass in "props.children") so you can wrap it. 
step4 : set the state and pass through  <whatever-context.Provider value={whatever-state}>
step5 : export both context-obj and </whatever-context.Provider> ***IMPORTANT
step6 : set to import ThemeContext to where you want it to use ex. Navbar.js
then what you need to do is import useContext and then initial with your context ex. 
  'const context = useContext(ThemeContext);'

- Set method in context 
step1 : after decide what you want the method will be, head to the provider in your context
and create a method ex. toggleTheme() and set state there 
step2 : send this new method as a value through ThemeProvider 
ex. '<ThemeContext.Provider value={{isDarkMode, toggleTheme}}>'
now the context has this function so go ahead and extract it out


Material UI https://v4.mui.com/customization/globals/ 
Git : https://github.com/Colt/context-demo-app/blob/add-initial-components/package.json

